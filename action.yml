name: 'Check for new Snyk issues'
description: 'This is an action that checks if there are new license or vulnerability issues compared to a baseline project.'

inputs:
  snyk-args:
    default: ""
    required: false
    description: "Arguments passed to the Snyk test command"
  artifact-name:
    default: "snyk-report"
    required: false
    description: "The name of the Snyk report generated"
  snyk-token:
    required: true
    description: "The token used to authenticate with Snyk"
  github-username:
    default: ""
    required: false
    description: "GitHub username"
  github-token:
    default: ""
    required: false
    description: "GitHub token"
  enterprise-access-key:
    default: ""
    required: false
    description: "HiveMQ Enterprise Access Key"
  enterprise-secret-key:
    default: ""
    required: false
    description: "HiveMQ Enterprise Secret Key"
  snyk-baseline-project-id:
    default: ""
    required: false
    description: "ID of project that is used as a baseline"
  snyk-api-version:
    default: "2024-05-08"
    required: false
    description: "Snyk API version to use"

runs:
  using: composite
  steps:
    - name: Setup Snyk
      uses: snyk/actions/setup@master

    - name: Run Snyk to check for vulnerabilities
      shell: bash
      run: snyk test ${{ inputs.snyk-args }} --print-deps --json --json-file-output=snyk.json
      env:
        SNYK_TOKEN: ${{ inputs.snyk-token }}
        ORG_GRADLE_PROJECT_hivemqCommonsUsername: ${{ inputs.github-username }}
        ORG_GRADLE_PROJECT_hivemqCommonsPassword: ${{ inputs.github-token }}
        ORG_GRADLE_PROJECT_hivemqEnterpriseAccessKey: ${{ inputs.enterprise-access-key }}
        ORG_GRADLE_PROJECT_hivemqEnterpriseSecretKey: ${{ inputs.enterprise-secret-key }}
      continue-on-error: true

    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install and run snyk-to-html
      shell: bash
      run: |
        npm install snyk-to-html -g
        snyk-to-html -i snyk.json -o ${{ inputs.artifact-name }}.html

    - name: Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-name }}.html

    - name: Install snyk-delta and dependencies
      shell: bash
      run: npm i -g snyk-delta

    - name: Parse Snyk args
      shell: bash
      run: |
        echo "snyk_org=$(jq -r .org < snyk.json)" >> "$GITHUB_ENV"
        echo "snyk_project_name=$(jq -r .projectName < snyk.json)" >> "$GITHUB_ENV"
        echo "snyk_target_file=$(jq -r .targetFile < snyk.json)" >> "$GITHUB_ENV"

    - name: Get Snyk Org ID
      id: get_snyk_org_id
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://api.snyk.io/rest/orgs?version=${{ inputs.snyk-api-version }}&slug=${{ env.snyk_org }}'
        method: 'GET'
        customHeaders: '{"Content-Type": "application/vnd.api+json", "Authorization": "token ${{ inputs.snyk-token }}"}'
        retry: 3

    - name: Get Baseline Project ID
      id: get_baseline_project_id
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://api.snyk.io/rest/orgs/${{ fromJson(steps.get_snyk_org_id.outputs.response).data[0].id }}/projects?version=${{ inputs.snyk-api-version }}&target_reference=${{ github.base_ref }}&names=${{ env.snyk_project_name }}%3A${{ env.snyk_target_file }}'
        method: 'GET'
        customHeaders: '{"Content-Type": "application/vnd.api+json", "Authorization": "token ${{ inputs.snyk-token }}"}'
        retry: 3

    - name: Check delta
      shell: bash
      run: |
        set +e
        snyk_delta_args=()
        retrieved_baseline_project_id=${{ fromJson(steps.get_baseline_project_id.outputs.response).data[0].id }}
        snyk_baseline_project_id=${retrieved_baseline_project_id:-'${{ inputs.snyk-baseline-project-id }}'}
        if [ -n $snyk_baseline_project_id ]; then
          snyk_delta_args+=(--baselineProject $snyk_baseline_project_id)
          echo "baseline is $snyk_baseline_project_id"
        fi
        cat snyk.json | snyk-delta "${snyk_delta_args[@]}"
        exit_code=$?
        if [ $exit_code -ne 0 ]; then
            if [ $exit_code -eq 1 ]; then
              echo "::error ::New issues were found! For more info, refer to the Snyk report found in the Artifacts section of the job summary."
            fi
            exit $exit_code
        fi
      env:
        SNYK_TOKEN: ${{ inputs.snyk-token }}
        ORG_GRADLE_PROJECT_hivemqCommonsUsername: ${{ inputs.github-username }}
        ORG_GRADLE_PROJECT_hivemqCommonsPassword: ${{ inputs.github-token }}
        ORG_GRADLE_PROJECT_hivemqEnterpriseAccessKey: ${{ inputs.enterprise-access-key }}
        ORG_GRADLE_PROJECT_hivemqEnterpriseSecretKey: ${{ inputs.enterprise-secret-key }}
